version: "3.8"

services:
  database:
    image: postgres:15-alpine
    container_name: proyecto_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: app_database
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_database"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: proyecto_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=app_database
      - DB_USER=app_user
      - DB_PASSWORD=app_password
      - JWT_SECRET=mi_jwt_secret_super_seguro_2024
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3001:3001"
      - "9229:9229"
    volumes:
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend/my-app
      dockerfile: ../../frontend/Dockerfile.dev
    container_name: proyecto_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3001/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - VITE_API_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app_network
    stdin_open: true
    tty: true

  nginx:
    image: nginx:alpine
    container_name: proyecto_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
  redis:
    image: redis:7-alpine
    container_name: proyecto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    command: redis-server --appendonly yes

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: proyecto_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@proyecto.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  app_network:
    driver: bridge
    name: proyecto_network
